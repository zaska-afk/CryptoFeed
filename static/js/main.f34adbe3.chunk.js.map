{"version":3,"sources":["components/NewsFeed.js","components/ExchangeRate.js","components/CurrencyConverter.js","App.js","index.js"],"names":["NewsFeed","useState","articles","setArticles","useEffect","axios","request","method","url","headers","process","then","response","console","log","data","catch","error","articleList","slice","className","map","article","_index","href","title","ExchangeRate","exchangeRate","chosenPrimaryCurrency","chosenSecondaryCurrency","CurrencyConverter","currencies","setChosenPrimaryCurrency","setChosenSecondaryCurrency","ammount","setAmount","setExchangeRate","primaryCurrencyExchange","setPrimaryCurrencyExchange","secondaryCurrencyExchange","setSecondaryCurrencyExchange","result","setResult","type","name","value","onChange","e","target","currency","disabled","id","onClick","options","params","from_currency","function","to_currency","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f34adbe3.chunk.js","sourcesContent":["import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\n\nconst NewsFeed = () => {\n  const [articles, setArticles] = useState(null);\n  useEffect(() => {\n    const options = {\n      method: \"GET\",\n      url: \"https://crypto-news-live.p.rapidapi.com/news\",\n      headers: {\n        \"x-rapidapi-host\": \"crypto-news-live.p.rapidapi.com\",\n        \"x-rapidapi-key\": process.env.REACT_APP_RAPID_API_KEY,\n      },\n    };\n\n    axios\n      .request(options)\n      .then((response) => {\n        console.log(response.data);\n        setArticles(response.data);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }, []);\n\n  console.log(articles);\n\n  const articleList = articles?.slice(0, 7);\n\n  return (\n    <div className=\"news-feed\">\n      <h2>NewsFeed</h2>\n      {articleList?.map((article, _index) => (\n        <div key={_index}>\n          <a href={article.url}>\n            <p>{article.title}</p>\n          </a>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default NewsFeed;\n","const ExchangeRate = ({\n  exchangeRate,\n  chosenPrimaryCurrency,\n  chosenSecondaryCurrency,\n}) => {\n  return (\n    <div className=\"exchange-rate\">\n      <h3>Exchange Rate </h3>\n      <h1>{exchangeRate}</h1>\n      <p>\n        {chosenPrimaryCurrency} to {chosenSecondaryCurrency}\n      </p>\n    </div>\n  );\n};\n\nexport default ExchangeRate;\n","import { useState } from \"react\";\nimport ExchangeRate from \"./ExchangeRate\";\nimport axios from \"axios\";\n\nfunction CurrencyConverter() {\n  const currencies = [\"BTC\", \"ETH\", \"USD\", \"XRP\", \"LTC\", \"ADA\"];\n  const [chosenPrimaryCurrency, setChosenPrimaryCurrency] = useState(\"BTC\");\n  const [chosenSecondaryCurrency, setChosenSecondaryCurrency] = useState(\"USD\");\n  const [ammount, setAmount] = useState(1);\n  const [exchangeRate, setExchangeRate] = useState(0);\n  const [primaryCurrencyExchange, setPrimaryCurrencyExchange] = useState(\"BTC\");\n  const [secondaryCurrencyExchange, setSecondaryCurrencyExchange] =\n    useState(\"USD\");\n  const [result, setResult] = useState(0);\n\n  console.log(\"prime currency: \" + chosenPrimaryCurrency);\n  console.log(\"secondary currency: \" + chosenSecondaryCurrency);\n  console.log(\"ammount: \" + ammount);\n\n  const convert = () => {\n    const options = {\n      method: \"GET\",\n      url: \"https://alpha-vantage.p.rapidapi.com/query\",\n      params: {\n        from_currency: chosenPrimaryCurrency,\n        function: \"CURRENCY_EXCHANGE_RATE\",\n        to_currency: chosenSecondaryCurrency,\n      },\n      headers: {\n        \"x-rapidapi-host\": \"alpha-vantage.p.rapidapi.com\",\n        \"x-rapidapi-key\": process.env.REACT_APP_RAPID_API_KEY,\n      },\n    };\n\n    axios\n      .request(options)\n      .then((response) => {\n        console.log(\n          response.data[\"Realtime Currency Exchange Rate\"][\"5. Exchange Rate\"]\n        );\n        setExchangeRate(\n          response.data[\"Realtime Currency Exchange Rate\"][\"5. Exchange Rate\"]\n        );\n        setResult(\n          response.data[\"Realtime Currency Exchange Rate\"][\"5. Exchange Rate\"] *\n            ammount\n        );\n        setPrimaryCurrencyExchange(chosenPrimaryCurrency);\n        setSecondaryCurrencyExchange(chosenSecondaryCurrency);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n  console.log(exchangeRate);\n  return (\n    <div className=\"currency-converter\">\n      <h2>Currency Converter</h2>\n      <div className=\"input-box\">\n        <table>\n          <tbody>\n            <tr>\n              <td> Primary Currency: </td>\n              <td>\n                <input\n                  type=\"number\"\n                  name=\"currency-ammount-1\"\n                  value={ammount}\n                  onChange={(e) => setAmount(e.target.value)}\n                />\n              </td>\n              <td>\n                {\" \"}\n                <select\n                  value={chosenPrimaryCurrency}\n                  name=\"currency-option-1\"\n                  className=\"currency-options\"\n                  onChange={(e) => setChosenPrimaryCurrency(e.target.value)}\n                >\n                  {currencies.map((currency, _index) => (\n                    <option key={_index}>{currency}</option>\n                  ))}\n                </select>{\" \"}\n              </td>\n            </tr>\n            <tr>\n              <td> Secondary Currency: </td>\n              <td>\n                <input\n                  name=\"currency-ammount-2\"\n                  value={result}\n                  disabled={true}\n                />\n              </td>\n              <td>\n                {\" \"}\n                <select\n                  value={chosenSecondaryCurrency}\n                  name=\"currency-option-2 \"\n                  className=\"currency-options\"\n                  onChange={(e) => setChosenSecondaryCurrency(e.target.value)}\n                >\n                  {currencies.map((currency, _index) => (\n                    <option key={_index}>{currency}</option>\n                  ))}\n                </select>{\" \"}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <button id=\"convert-button\" onClick={convert}>\n          Convert\n        </button>\n      </div>\n      <ExchangeRate\n        exchangeRate={exchangeRate}\n        chosenPrimaryCurrency={primaryCurrencyExchange}\n        chosenSecondaryCurrency={secondaryCurrencyExchange}\n      />\n    </div>\n  );\n}\n\nexport default CurrencyConverter;\n","// import logo from \"./logo.svg\";\n// import \"./App.css\";\nimport NewsFeed from \"./components/NewsFeed\";\nimport CurrencyConverter from \"./components/CurrencyConverter\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <h1>Crypto Feed</h1>\n      <div className=\"app-wrapper\">\n      <CurrencyConverter />\n      <NewsFeed />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}